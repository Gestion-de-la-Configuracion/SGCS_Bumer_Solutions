@model List<SGCS_Bumer_Solutions.Models.Base_de_Datos.PROYECTO>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">

        <div class="row">
            <div class="col-md-12">
                <div class="card-box">
                    <div id="calendar"></div>
                </div>
            </div>
        </div>        
    </div>
</div>

<div class="modal fade" role="dialog" tabindex="-1" id="event-modal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="border-radius: 15px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><strong>Agregar nuevo evento</strong></h4>
            </div>
            <div class="modal-body"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-success save-event waves-effect waves-light">Crear evento</button>
                <button type="button" class="btn btn-danger delete-event waves-effect waves-light" data-dismiss="modal">Borrar</button>
            </div>
        </div>
    </div>
</div>

<script src="~/Source/js/jquery.min.js"></script>
<script src="~/Source/js/bootstrap.min.js"></script>
<script src="~/Source/js/detect.js"></script>
<script src="~/Source/js/fastclick.js"></script>
<script src="~/Source/js/jquery.slimscroll.js"></script>
<script src="~/Source/js/jquery.blockUI.js"></script>
<script src="~/Source/js/waves.js"></script>
<script src="~/Source/js/jquery.nicescroll.js"></script>
<script src="~/Source/js/jquery.scrollTo.min.js"></script>
<script src="~/Source/plugins/jquery-knob/jquery.knob.js"></script>

<!-- Calendario -->
<script src="~/Source/plugins/moment/moment.js"></script>
<script src='~/Source/plugins/fullcalendar/dist/fullcalendar.min.js'></script>
<script src="~/Source/plugins/fullcalendar/dist/lang/es.js"></script>


<script type="text/javascript">

    !function ($) {
        "use strict";

        var CalendarApp = function () {
            this.$body = $("body")
            this.$modal = $('#event-modal'),
                this.$event = ('#external-events div.external-event'),
                this.$calendar = $('#calendar'),
                this.$saveCategoryBtn = $('.save-category'),
                this.$categoryForm = $('#add-category form'),
                this.$extEvents = $('#external-events'),
                this.$calendarObj = null
        };

        CalendarApp.prototype.onDrop = function (eventObj, date) {
            var $this = this;
            var originalEventObject = eventObj.data('eventObject');
            var $categoryClass = eventObj.attr('data-class');
            var copiedEventObject = $.extend({}, originalEventObject);
            copiedEventObject.start = date;
            if ($categoryClass)
                copiedEventObject['className'] = [$categoryClass];
            $this.$calendar.fullCalendar('renderEvent', copiedEventObject, true);
            if ($('#drop-remove').is(':checked')) {
                eventObj.remove();
            }
        },
            /* on click on event */
            CalendarApp.prototype.onEventClick = function (calEvent, jsEvent, view) {
                var $this = this;
                var form = $("<form></form>");
                form.append("<label>Cambiar nombre del evento</label>");
                form.append("<div class='input-group'><input class='form-control' type=text value='" + calEvent.title + "' /><span class='input-group-btn'><button type='submit' class='btn btn-success waves-effect waves-light'><i class='fa fa-check'></i> Guardar</button></span></div>");
                $this.$modal.modal({
                    backdrop: 'static'
                });
                $this.$modal.find('.delete-event').show().end().find('.save-event').hide().end().find('.modal-body').empty().prepend(form).end().find('.delete-event').unbind('click').click(function () {
                    $this.$calendarObj.fullCalendar('removeEvents', function (ev) {
                        return (ev._id == calEvent._id);
                    });
                    $this.$modal.modal('hide');
                });
                $this.$modal.find('form').on('submit', function () {
                    calEvent.title = form.find("input[type=text]").val();
                    $this.$calendarObj.fullCalendar('updateEvent', calEvent);
                    $this.$modal.modal('hide');
                    return false;
                });
            },
            /* on select */
            CalendarApp.prototype.onSelect = function (start, end, allDay) {
                var $this = this;
                $this.$modal.modal({
                    backdrop: 'static'
                });
                var form = $("<form></form>");
                form.append("<div class='row'></div>");
                form.find(".row")
                    .append("<div class='col-md-6'><div class='form-group'><label class='control-label'>Nombre del evento</label><input class='form-control' placeholder='Ingresa el nombre' type='text' name='title'/></div></div>")
                    .append("<div class='col-md-6'><div class='form-group'><label class='control-label'>Elegir color del evento</label><select class='form-control' name='category'></select></div></div>")
                    .find("select[name='category']")
                    .append("<option value='bg-danger'>Danger</option>")
                    .append("<option value='bg-success'>Success</option>")
                    .append("<option value='bg-purple'>Purple</option>")
                    .append("<option value='bg-primary'>Primary</option>")
                    .append("<option value='bg-pink'>Pink</option>")
                    .append("<option value='bg-info'>Info</option>")
                    .append("<option value='bg-warning'>Warning</option></div></div>");
                $this.$modal.find('.delete-event').hide().end().find('.save-event').show().end().find('.modal-body').empty().prepend(form).end().find('.save-event').unbind('click').click(function () {
                    form.submit();
                });
                $this.$modal.find('form').on('submit', function () {
                    var title = form.find("input[name='title']").val();
                    var beginning = form.find("input[name='beginning']").val();
                    var ending = form.find("input[name='ending']").val();
                    var categoryClass = form.find("select[name='category'] option:checked").val();
                    if (title !== null && title.length != 0) {
                        $this.$calendarObj.fullCalendar('renderEvent', {
                            title: title,
                            start: start,
                            end: end,
                            allDay: false,
                            className: categoryClass
                        }, true);
                        $this.$modal.modal('hide');
                    }
                    else {
                        alert('Tienes que darle un titulo al evento o actividad');
                    }
                    return false;

                });
                $this.$calendarObj.fullCalendar('unselect');
            },
            CalendarApp.prototype.enableDrag = function () {
                $(this.$event).each(function () {
                    var eventObject = {
                        title: $.trim($(this).text())
                    };
                    $(this).data('eventObject', eventObject);
                    $(this).draggable({
                        zIndex: 999,
                        revert: true,
                        revertDuration: 0
                    });
                });
            }
        CalendarApp.prototype.init = function () {
            this.enableDrag();
            var date = new Date();
            var d = date.getDate();
            var m = date.getMonth();
            var y = date.getFullYear();
            var form = '';
            var today = new Date($.now());

            //Editar esto

            @{
                string contenido = "";
                string[] colores = { "bg-primary", "bg-succes", "bg-info", "bg-warning", "bg-danger", "bg-inverse", "bg-purple", "bg-pink", "bg-custom", "bg-default"};
                Random rnd = new Random();

                foreach (var proyecto in Model)
                {
                    string mes1 = proyecto.FECHA_INICIO.ToString("MM");
                    string dia1 = proyecto.FECHA_INICIO.ToString("dd");
                    string año1 = proyecto.FECHA_INICIO.ToString("yyyyy");
                    string mes2 = proyecto.FECHA_FIN.ToString("MM");
                    string dia2 = proyecto.FECHA_FIN.ToString("dd");
                    string año2 = proyecto.FECHA_FIN.ToString("yyyyy");
                    string horainicio = "08:00:00";
                    string horafin = "20:00:00";
                    string descripcpro = proyecto.NOMBRE;

                    string llave1 = "{";
                    string titulo = "title: '" + descripcpro + "',";
                    string start = "start: " + "'" + mes1 + " " + dia1 + " " + año1 + "',";
                    string end = "end: " + "'" + mes2 + " " + dia2 + " " + año2 + "',";
                    string allday = "allday: true,";
                    string classname = "className: '" + colores[rnd.Next(0, 10)] + "'";
                    string llave2 = "},";

                    contenido += llave1 + titulo + start + end + allday + classname + llave2;
                }
            }

            var defaultEvents = [@Html.Raw(contenido)];

            var $this = this;
            $this.$calendarObj = $this.$calendar.fullCalendar({
                slotDuration: '00:15:00',
                minTime: '06:00:00',
                maxTime: '24:00:00',
                defaultView: 'month',
                handleWindowResize: true,
                height: $(window).height() - 200,
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                events: defaultEvents,
                editable: true,
                droppable: true,
                eventLimit: false,
                selectable: true,
                drop: function (date) { $this.onDrop($(this), date); },
                select: function (start, end, allDay) { $this.onSelect(start, end, allDay); },
                eventClick: function (calEvent, jsEvent, view) { $this.onEventClick(calEvent, jsEvent, view); }

            });

            //on new event
            this.$saveCategoryBtn.on('click', function () {
                var categoryName = $this.$categoryForm.find("input[name='category-name']").val();
                var categoryColor = $this.$categoryForm.find("select[name='category-color']").val();
                if (categoryName !== null && categoryName.length != 0) {
                    $this.$extEvents.append('<div class="external-event bg-' + categoryColor + '" data-class="bg-' + categoryColor + '" style="position: relative;"><i class="fa fa-move"></i>' + categoryName + '</div>')
                    $this.enableDrag();
                }

            });
        },

            $.CalendarApp = new CalendarApp, $.CalendarApp.Constructor = CalendarApp

    }(window.jQuery),

        function ($) {
            "use strict";
            $.CalendarApp.init()
        }(window.jQuery);


</script>